@model IEnumerable<Teatastic.Models.Tea>
@using Microsoft.AspNetCore.Identity
@using Teatastic.Areas.Identity.Data
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@inject SignInManager<TeatasticUser> SignInManager
@inject UserManager<TeatasticUser> UserManager

@{
    ViewData["Title"] = Localizer["Index"];
    Layout = "~/Views/Shared/_Layout.cshtml";

    Pager pager = new Pager();
    int PageNo = 0;

    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        PageNo = pager.CurrentPage;
    }
}
<partial name="_Notification"/>

@if (User.IsInRole("SystemAdministrator"))
{
    <h1>Index Tea</h1>

    <p>
        <a asp-action="Create">@Localizer["Create New"]</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @*@Html.DisplayNameFor(model => model.Name)*@
                    @Localizer["Name"]
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Price)*@
                    @Localizer["Price"]
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Functions)*@
                    @Localizer["Functions"]
                </th>
                <th>
                    @*@Html.DisplayNameFor(model => model.Brand)*@
                    @Localizer["Brand"]
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @foreach (var func in item.Functions)
                        {
                            <p> @func.Name</p>
                        }
                    </td>
                    <td>@item.Brand.Name</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">@Localizer["Edit"]</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">@Localizer["Details"]</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">@Localizer["Delete"]</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else{
    <div style="text-align:center" class="mb-2"> Items in cart: @ViewData["CartItemsCount"]</div>

    <div class="d-flex align-items-center flex-wrap justify-content-center " style=" gap:4em; justify-content:center; flex-flow:wrap; text-align:center;">
        @foreach (var item in Model)
        {
            <div class="card" style="width: 18rem;">
                @*<img src="..." class="card-img-top" alt="...">*@
                <div class="card-body">
                    <h5 class="card-title" style="text-transform:uppercase;">
                        <a asp-controller="Teas" asp-action="Details" asp-route-id="@item.Id" class="text-info">@item.Name</a>
                        @*@Html.DisplayFor(modelItem => item.Name)*@
                    </h5>
                    <p class="card-text" style="font-weight:bold;">
                        @Html.DisplayFor(modelItem => item.Price)
                    </p>
                    <p class="card-text">
                        @foreach (var func in item.Functions)
                        {
                        <p style="display:inline-block" class="badge bg-info"> @func.Name</p>
                        }
                    </p>
                    <p class="card-text" style="font-weight:bold;">
                        @item.Brand.Name
                    <p />
                    </p>
                    <a asp-controller="Cart" asp-action="AddToCart" asp-route-id="@item.Id" class="btn btn-primary float-right store-btn">@Localizer["Add to cart"] <i class="bi bi-cart"></i></a>
                </div>
            </div>
        }
        <div class="container"> 
            @if (pager.TotalPages > 0)
            {
                <ul class="pagination justify-content-end">
                    @for(var pg = pager.StartPage; pg <= pager.EndPage; pg++)
                    {
                        <li class="page-item @(pg ==pager.CurrentPage ? "active" : "")">
                            <a class="page-link" asp-controller="Teas" asp-action="Index" asp-route-pg="@pg">@pg</a>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
}